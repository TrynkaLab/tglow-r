% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filters.r
\name{filter_vec_min}
\alias{filter_vec_min}
\alias{filter_vec_min_sum}
\alias{filter_vec_max}
\alias{filter_vec_max_sum}
\alias{filter_vec_mod_z}
\alias{filter_vec_mod_z_sum}
\alias{filter_vec_mod_z_perc}
\alias{filter_agg_na}
\alias{filter_agg_na_multicol}
\alias{filter_agg_near_zero_var}
\alias{filter_agg_near_zero_var_multicol}
\alias{filter_agg_zero_var}
\alias{filter_agg_zero_var_multicol}
\alias{filter_agg_coef_var}
\alias{filter_agg_coef_var_multicol}
\alias{filter_agg_unique_val}
\alias{filter_agg_unique_val_multicol}
\alias{filter_agg_inf_median}
\alias{filter_agg_inf_median_sum}
\alias{filter_agg_inf}
\alias{filter_agg_inf_multicol}
\alias{filter_agg_blacklist}
\alias{filter_sum}
\alias{filter_multicol}
\title{Filters to apply to TglowDatasets}
\usage{
filter_vec_min(vec, thresh, grouping = NULL)

filter_vec_min_sum(...)

filter_vec_max(vec, thresh, grouping = NULL)

filter_vec_max_sum(...)

filter_vec_mod_z(vec, thresh, grouping = NULL, absolute = T, method = "mod.z")

filter_vec_mod_z_sum(...)

filter_vec_mod_z_perc(vec, thresh, thresh2, grouping = NULL)

filter_agg_na(vec, thresh, grouping = NULL)

filter_agg_na_multicol(...)

filter_agg_near_zero_var(vec, thresh = NULL, grouping = NULL)

filter_agg_near_zero_var_multicol(...)

filter_agg_zero_var(vec, thresh = 0)

filter_agg_zero_var_multicol(...)

filter_agg_coef_var(vec, thresh)

filter_agg_coef_var_multicol(...)

filter_agg_unique_val(vec, thresh = NULL)

filter_agg_unique_val_multicol(...)

filter_agg_inf_median(vec, thresh = NULL)

filter_agg_inf_median_sum(...)

filter_agg_inf(vec, thresh = NULL, grouping = NULL)

filter_agg_inf_multicol(...)

filter_agg_blacklist(vec, thresh, grouping = NULL)

filter_sum(vec, thresh, grouping, func)

filter_multicol(vec, thresh, grouping, func)
}
\arguments{
\item{vec}{Input vector or matrix}

\item{thresh}{Filter threshold value}

\item{grouping}{Optional grouping for filters applied on a subgroup of vec, not all filters respect this!}
}
\value{
A logical where TRUE should be kept and FALSE values should be removed
}
\description{
Filters come in filter_vec which returns a vector, and filter_agg which takes a vector and retruns a single value.
They respectively have modifiers _sum and _multicol which apply them over multicolumn data. See details.
}
\details{
Filters can be easily configured based on a filter table, making it easy to template sets of operations.
Filters are NOT applied seqeuntially, but run independently. If you do want to run filters in seqeuntially,
you will have to run successive iterations, but this is easy enough to do. An easy way to maintain filters
and edit them is to store them in a google sheet and load them into R. Then using the function \code{tglow_filters_from_table}
to create the filter objects.

The filter table should have the following columns, and one sheet for feature level filters, and one for object level filters.
Exact layouts are customizable, see the help of \code{tglow_filters_from_table}
There are two flavors of filters:
\itemize{
\item filter_vec_x: Accepts a vector and returns a logical vector of the same length (i.e. 'which objects for this feature are > 0')
\item filter_agg_x: Accepts a vector and aggregates on a statistic and returns a single logical (i.e 'is the variance of this feature > 0')
}

Then there are the filter modifiers
\itemize{
\item filter_vec_x_sum: Applies the filter to multiple columns, returning a logical of nrow(input), where T only if all columns for that row are T, otherwise F
\item filter_agg_x_mutlticol: Applies a filter to data with multiple columns and returns a logical vector of ncol(input). If you want to apply these at the object level (i.e. 'filter objects with >x\% of NA features'), make sure to set \code{transpose=T} in the filter definition, if you want to filter features (i.e. 'filter features with >x\% of NA objects') leave \code{transpose=F}.
}
}
