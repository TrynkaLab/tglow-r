% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clustering.r
\name{calculate_clustering}
\alias{calculate_clustering}
\title{Cluster using a a K nearest neighbor graph in the PCA space}
\usage{
calculate_clustering(
  dataset,
  reduction,
  pc.n = NULL,
  k = 10,
  method = "louvain",
  resolution = 0.1,
  exact.nn = FALSE,
  col.out = "clusters"
)
}
\arguments{
\item{dataset}{A tglow dataset}

\item{reduction}{The reduction to use for calculating UMAPs. If NULL re-calculated}

\item{pc.n}{How many PC's to use}

\item{k}{How many NN to calculate}

\item{method}{Clustering method to use 'louvain' or 'leiden'}

\item{resolution}{Resolution for method 'louvain' or 'leiden'}

\item{exact.nn}{Instead of using Seurat ANNOY for kNN use \code{\link[=nn2]{RANN::nn2()}}}

\item{col.out}{Column name to store the clustering under added to the meta slot on the output object}
}
\value{
The \linkS4class{TglowDataset} with clusters added to meta slot and the graph
}
\description{
Cluster using a a K nearest neighbor graph in the PCA space
}
\details{
Here I use the Seurat implementation of the kNN, which is NOT and exact
kNN graph, but it is very fast. Practically it should perform pretty well
The parameter k controls how many nearest neighbors to find
The distance matrix is built from the prinicpal components


Alternatively:
Build exact knn graph, better but MUCH slower
Set eps to something not 0 to allow error tolerance and
get an approximate nn


Cluster the graph using louvain (default) or leiden clustering
The resolution parameter controls how many clusters get generated
you will need to play with this to find a reasonable number of clusters
lower resolution tends to result in fewer clusters
}
